javax.validation.constraints.AssertFalse.message = deve ser false
javax.validation.constraints.AssertTrue.message = deve ser true
javax.validation.constraints.Digits.message = valor numérico fora dos limites (<{integer} digits>.<{fraction} digits> esperados)
javax.validation.constraints.Future.message = deve ser um momento do futuro
javax.validation.constraints.Max.message = deve ser menor ou igual a {value}
javax.validation.constraints.Min.message = deve ser maior ou igual a {value}
javax.validation.constraints.NotNull.message = não pode ser null
javax.validation.constraints.Null.message = deve ser null
javax.validation.constraints.Past.message = deve ser um momento no passado
javax.validation.constraints.Pattern.message = precisa combinar com "{regexp}"
javax.validation.constraints.Size.message = o tamanho deve estar entre {min} e {max}
org.hibernate.validator.constraints.Length.message = o tamanho deve estar entre {min} e {max}
org.hibernate.validator.constraints.NotEmpty.message = não pode ser vazio
org.hibernate.validator.constraints.CreditCardNumber.message = número de catão de crédito inválido
org.hibernate.validator.constraints.Email.message = deve ser um e-mail com formato válido
org.hibernate.validator.constraints.NotBlank.message = não pode ser vazio
org.hibernate.validator.constraints.Range.message = deve estar entre {min} e {max}
org.hibernate.validator.constraints.URL.message = deve ser uma URL válida
br.les.opus.auth.unique.username = e-mail já em uso por outro usuário